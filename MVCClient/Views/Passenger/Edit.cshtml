@model MVCClient.Models.PassengerM

@{
    ViewData["Title"] = "Edit";
}

<h4>Change your Informations</h4>

<hr />
<div class="row">
    <div class="col-md-4">

        @*@using (Html.BeginForm("Edit","Passenger",FormMethod.Post, new { id = Html.ValueFor(model => model.PersonId) }))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4></h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.PersonId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PersonId, new { disabled = "disabled" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" }, @value = Html.ValueFor(model => model.FullName) })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" }, @value = Html.ValueFor(model => model.Email) })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PassportID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PassportID, new { htmlAttributes = new { @class = "form-control" }, @value = Html.ValueFor(model => model.PassportID) })
                    @Html.ValidationMessageFor(model => model.PassportID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" }, @value = Html.ValueFor(model => model.Birthday) })
                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save new Infos" class="btnbtn-primary" />
                </div>
            </div>
        </div>
        }*@





        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="PersonId" class="control-label"></label>
                <input asp-for="PersonId" type="number" class="form-control" value="@Html.ValueFor(model => model.PersonId)" disabled />
                <span asp-validation-for="PersonId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" type="email" class="form-control" value="@Html.ValueFor(model => model.Email)" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FullName" class="control-label"></label>
                <input asp-for="FullName" type="text" class="form-control" value="@Html.ValueFor(model => model.FullName)" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PassportID" class="control-label"></label>
                <input asp-for="PassportID" type="text" class="form-control" value="@Html.ValueFor(model => model.PassportID)" />
                <span asp-validation-for="PassportID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Birthday" class="control-label"></label>
                <input asp-for="Birthday" type="datetime" class="form-control" value="@Html.ValueFor(model => model.Birthday)" />
                <span asp-validation-for="Birthday" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label" hidden></label>
                <input asp-for="Status" type="text" class="form-control" value="@Html.ValueFor(model => model.Status)" hidden />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<br />


<form>
    <input type="button" value="Cancel" onclick="history.back()">
</form>

